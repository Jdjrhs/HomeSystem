[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "homesystem"
version = "0.1.0"
description = "Home System with ArXiv integration"
requires-python = ">=3.8"
dependencies = [
    "psycopg2-binary",
    "redis",
    "requests",
    "feedparser",
    "arxiv"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["HomeSystem*"]

[tool.pylsp-mypy]
enabled = true
live_mode = true

[tool.pyright]
include = ["HomeSystem", "examples", "*.py"]
exclude = ["**/__pycache__", "**/.git"]
pythonVersion = "3.10"
pythonPlatform = "Linux"

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by line-length)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # allow raise without from in exception handlers
]

[tool.ruff.lint.isort]
known-first-party = ["HomeSystem"]
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests", "examples"]
python_files = ["test_*.py", "*_test.py", "debug_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["HomeSystem"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]